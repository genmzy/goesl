// Code generated by "enumer -type=EventName"; DO NOT EDIT.

package ev_name

import (
	"fmt"
	"strings"
)

const _EventNameName = "CUSTOMCLONECHANNEL_CREATECHANNEL_DESTROYCHANNEL_STATECHANNEL_CALLSTATECHANNEL_ANSWERCHANNEL_HANGUPCHANNEL_HANGUP_COMPLETECHANNEL_EXECUTECHANNEL_EXECUTE_COMPLETECHANNEL_HOLDCHANNEL_UNHOLDCHANNEL_BRIDGECHANNEL_UNBRIDGECHANNEL_PROGRESSCHANNEL_PROGRESS_MEDIACHANNEL_OUTGOINGCHANNEL_PARKCHANNEL_UNPARKCHANNEL_APPLICATIONCHANNEL_ORIGINATECHANNEL_UUIDAPILOGINBOUND_CHANOUTBOUND_CHANSTARTUPSHUTDOWNPUBLISHUNPUBLISHTALKNOTALKSESSION_CRASHMODULE_LOADMODULE_UNLOADDTMFMESSAGEPRESENCE_INNOTIFY_INPRESENCE_OUTPRESENCE_PROBEMESSAGE_WAITINGMESSAGE_QUERYROSTERCODECBACKGROUND_JOBDETECTED_SPEECHDETECTED_TONEPRIVATE_COMMANDHEARTBEATTRAPADD_SCHEDULEDEL_SCHEDULEEXE_SCHEDULERE_SCHEDULERELOADXMLNOTIFYPHONE_FEATUREPHONE_FEATURE_SUBSCRIBESEND_MESSAGERECV_MESSAGEREQUEST_PARAMSCHANNEL_DATAGENERALCOMMANDSESSION_HEARTBEATCLIENT_DISCONNECTEDSERVER_DISCONNECTEDSEND_INFORECV_INFORECV_RTCP_MESSAGECALL_SECURENATRECORD_STARTRECORD_STOPPLAYBACK_STARTPLAYBACK_STOPCALL_UPDATEFAILURESOCKET_DATAMEDIA_BUG_STARTMEDIA_BUG_STOPCONFERENCE_DATA_QUERYCONFERENCE_DATACALL_SETUP_REQCALL_SETUP_RESULTCALL_DETAILDEVICE_STATEALL"

var _EventNameIndex = [...]uint16{0, 6, 11, 25, 40, 53, 70, 84, 98, 121, 136, 160, 172, 186, 200, 216, 232, 254, 270, 282, 296, 315, 332, 344, 347, 350, 362, 375, 382, 390, 397, 406, 410, 416, 429, 440, 453, 457, 464, 475, 484, 496, 510, 525, 538, 544, 549, 563, 578, 591, 606, 615, 619, 631, 643, 655, 666, 675, 681, 694, 717, 729, 741, 755, 767, 774, 781, 798, 817, 836, 845, 854, 871, 882, 885, 897, 908, 922, 935, 946, 953, 964, 979, 993, 1014, 1029, 1043, 1060, 1071, 1083, 1086}

const _EventNameLowerName = "customclonechannel_createchannel_destroychannel_statechannel_callstatechannel_answerchannel_hangupchannel_hangup_completechannel_executechannel_execute_completechannel_holdchannel_unholdchannel_bridgechannel_unbridgechannel_progresschannel_progress_mediachannel_outgoingchannel_parkchannel_unparkchannel_applicationchannel_originatechannel_uuidapiloginbound_chanoutbound_chanstartupshutdownpublishunpublishtalknotalksession_crashmodule_loadmodule_unloaddtmfmessagepresence_innotify_inpresence_outpresence_probemessage_waitingmessage_queryrostercodecbackground_jobdetected_speechdetected_toneprivate_commandheartbeattrapadd_scheduledel_scheduleexe_schedulere_schedulereloadxmlnotifyphone_featurephone_feature_subscribesend_messagerecv_messagerequest_paramschannel_datageneralcommandsession_heartbeatclient_disconnectedserver_disconnectedsend_inforecv_inforecv_rtcp_messagecall_securenatrecord_startrecord_stopplayback_startplayback_stopcall_updatefailuresocket_datamedia_bug_startmedia_bug_stopconference_data_queryconference_datacall_setup_reqcall_setup_resultcall_detaildevice_stateall"

func (i EventName) String() string {
	if i < 0 || i >= EventName(len(_EventNameIndex)-1) {
		return fmt.Sprintf("EventName(%d)", i)
	}
	return _EventNameName[_EventNameIndex[i]:_EventNameIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _EventNameNoOp() {
	var x [1]struct{}
	_ = x[CUSTOM-(0)]
	_ = x[CLONE-(1)]
	_ = x[CHANNEL_CREATE-(2)]
	_ = x[CHANNEL_DESTROY-(3)]
	_ = x[CHANNEL_STATE-(4)]
	_ = x[CHANNEL_CALLSTATE-(5)]
	_ = x[CHANNEL_ANSWER-(6)]
	_ = x[CHANNEL_HANGUP-(7)]
	_ = x[CHANNEL_HANGUP_COMPLETE-(8)]
	_ = x[CHANNEL_EXECUTE-(9)]
	_ = x[CHANNEL_EXECUTE_COMPLETE-(10)]
	_ = x[CHANNEL_HOLD-(11)]
	_ = x[CHANNEL_UNHOLD-(12)]
	_ = x[CHANNEL_BRIDGE-(13)]
	_ = x[CHANNEL_UNBRIDGE-(14)]
	_ = x[CHANNEL_PROGRESS-(15)]
	_ = x[CHANNEL_PROGRESS_MEDIA-(16)]
	_ = x[CHANNEL_OUTGOING-(17)]
	_ = x[CHANNEL_PARK-(18)]
	_ = x[CHANNEL_UNPARK-(19)]
	_ = x[CHANNEL_APPLICATION-(20)]
	_ = x[CHANNEL_ORIGINATE-(21)]
	_ = x[CHANNEL_UUID-(22)]
	_ = x[API-(23)]
	_ = x[LOG-(24)]
	_ = x[INBOUND_CHAN-(25)]
	_ = x[OUTBOUND_CHAN-(26)]
	_ = x[STARTUP-(27)]
	_ = x[SHUTDOWN-(28)]
	_ = x[PUBLISH-(29)]
	_ = x[UNPUBLISH-(30)]
	_ = x[TALK-(31)]
	_ = x[NOTALK-(32)]
	_ = x[SESSION_CRASH-(33)]
	_ = x[MODULE_LOAD-(34)]
	_ = x[MODULE_UNLOAD-(35)]
	_ = x[DTMF-(36)]
	_ = x[MESSAGE-(37)]
	_ = x[PRESENCE_IN-(38)]
	_ = x[NOTIFY_IN-(39)]
	_ = x[PRESENCE_OUT-(40)]
	_ = x[PRESENCE_PROBE-(41)]
	_ = x[MESSAGE_WAITING-(42)]
	_ = x[MESSAGE_QUERY-(43)]
	_ = x[ROSTER-(44)]
	_ = x[CODEC-(45)]
	_ = x[BACKGROUND_JOB-(46)]
	_ = x[DETECTED_SPEECH-(47)]
	_ = x[DETECTED_TONE-(48)]
	_ = x[PRIVATE_COMMAND-(49)]
	_ = x[HEARTBEAT-(50)]
	_ = x[TRAP-(51)]
	_ = x[ADD_SCHEDULE-(52)]
	_ = x[DEL_SCHEDULE-(53)]
	_ = x[EXE_SCHEDULE-(54)]
	_ = x[RE_SCHEDULE-(55)]
	_ = x[RELOADXML-(56)]
	_ = x[NOTIFY-(57)]
	_ = x[PHONE_FEATURE-(58)]
	_ = x[PHONE_FEATURE_SUBSCRIBE-(59)]
	_ = x[SEND_MESSAGE-(60)]
	_ = x[RECV_MESSAGE-(61)]
	_ = x[REQUEST_PARAMS-(62)]
	_ = x[CHANNEL_DATA-(63)]
	_ = x[GENERAL-(64)]
	_ = x[COMMAND-(65)]
	_ = x[SESSION_HEARTBEAT-(66)]
	_ = x[CLIENT_DISCONNECTED-(67)]
	_ = x[SERVER_DISCONNECTED-(68)]
	_ = x[SEND_INFO-(69)]
	_ = x[RECV_INFO-(70)]
	_ = x[RECV_RTCP_MESSAGE-(71)]
	_ = x[CALL_SECURE-(72)]
	_ = x[NAT-(73)]
	_ = x[RECORD_START-(74)]
	_ = x[RECORD_STOP-(75)]
	_ = x[PLAYBACK_START-(76)]
	_ = x[PLAYBACK_STOP-(77)]
	_ = x[CALL_UPDATE-(78)]
	_ = x[FAILURE-(79)]
	_ = x[SOCKET_DATA-(80)]
	_ = x[MEDIA_BUG_START-(81)]
	_ = x[MEDIA_BUG_STOP-(82)]
	_ = x[CONFERENCE_DATA_QUERY-(83)]
	_ = x[CONFERENCE_DATA-(84)]
	_ = x[CALL_SETUP_REQ-(85)]
	_ = x[CALL_SETUP_RESULT-(86)]
	_ = x[CALL_DETAIL-(87)]
	_ = x[DEVICE_STATE-(88)]
	_ = x[ALL-(89)]
}

var _EventNameValues = []EventName{CUSTOM, CLONE, CHANNEL_CREATE, CHANNEL_DESTROY, CHANNEL_STATE, CHANNEL_CALLSTATE, CHANNEL_ANSWER, CHANNEL_HANGUP, CHANNEL_HANGUP_COMPLETE, CHANNEL_EXECUTE, CHANNEL_EXECUTE_COMPLETE, CHANNEL_HOLD, CHANNEL_UNHOLD, CHANNEL_BRIDGE, CHANNEL_UNBRIDGE, CHANNEL_PROGRESS, CHANNEL_PROGRESS_MEDIA, CHANNEL_OUTGOING, CHANNEL_PARK, CHANNEL_UNPARK, CHANNEL_APPLICATION, CHANNEL_ORIGINATE, CHANNEL_UUID, API, LOG, INBOUND_CHAN, OUTBOUND_CHAN, STARTUP, SHUTDOWN, PUBLISH, UNPUBLISH, TALK, NOTALK, SESSION_CRASH, MODULE_LOAD, MODULE_UNLOAD, DTMF, MESSAGE, PRESENCE_IN, NOTIFY_IN, PRESENCE_OUT, PRESENCE_PROBE, MESSAGE_WAITING, MESSAGE_QUERY, ROSTER, CODEC, BACKGROUND_JOB, DETECTED_SPEECH, DETECTED_TONE, PRIVATE_COMMAND, HEARTBEAT, TRAP, ADD_SCHEDULE, DEL_SCHEDULE, EXE_SCHEDULE, RE_SCHEDULE, RELOADXML, NOTIFY, PHONE_FEATURE, PHONE_FEATURE_SUBSCRIBE, SEND_MESSAGE, RECV_MESSAGE, REQUEST_PARAMS, CHANNEL_DATA, GENERAL, COMMAND, SESSION_HEARTBEAT, CLIENT_DISCONNECTED, SERVER_DISCONNECTED, SEND_INFO, RECV_INFO, RECV_RTCP_MESSAGE, CALL_SECURE, NAT, RECORD_START, RECORD_STOP, PLAYBACK_START, PLAYBACK_STOP, CALL_UPDATE, FAILURE, SOCKET_DATA, MEDIA_BUG_START, MEDIA_BUG_STOP, CONFERENCE_DATA_QUERY, CONFERENCE_DATA, CALL_SETUP_REQ, CALL_SETUP_RESULT, CALL_DETAIL, DEVICE_STATE, ALL}

var _EventNameNameToValueMap = map[string]EventName{
	_EventNameName[0:6]:            CUSTOM,
	_EventNameLowerName[0:6]:       CUSTOM,
	_EventNameName[6:11]:           CLONE,
	_EventNameLowerName[6:11]:      CLONE,
	_EventNameName[11:25]:          CHANNEL_CREATE,
	_EventNameLowerName[11:25]:     CHANNEL_CREATE,
	_EventNameName[25:40]:          CHANNEL_DESTROY,
	_EventNameLowerName[25:40]:     CHANNEL_DESTROY,
	_EventNameName[40:53]:          CHANNEL_STATE,
	_EventNameLowerName[40:53]:     CHANNEL_STATE,
	_EventNameName[53:70]:          CHANNEL_CALLSTATE,
	_EventNameLowerName[53:70]:     CHANNEL_CALLSTATE,
	_EventNameName[70:84]:          CHANNEL_ANSWER,
	_EventNameLowerName[70:84]:     CHANNEL_ANSWER,
	_EventNameName[84:98]:          CHANNEL_HANGUP,
	_EventNameLowerName[84:98]:     CHANNEL_HANGUP,
	_EventNameName[98:121]:         CHANNEL_HANGUP_COMPLETE,
	_EventNameLowerName[98:121]:    CHANNEL_HANGUP_COMPLETE,
	_EventNameName[121:136]:        CHANNEL_EXECUTE,
	_EventNameLowerName[121:136]:   CHANNEL_EXECUTE,
	_EventNameName[136:160]:        CHANNEL_EXECUTE_COMPLETE,
	_EventNameLowerName[136:160]:   CHANNEL_EXECUTE_COMPLETE,
	_EventNameName[160:172]:        CHANNEL_HOLD,
	_EventNameLowerName[160:172]:   CHANNEL_HOLD,
	_EventNameName[172:186]:        CHANNEL_UNHOLD,
	_EventNameLowerName[172:186]:   CHANNEL_UNHOLD,
	_EventNameName[186:200]:        CHANNEL_BRIDGE,
	_EventNameLowerName[186:200]:   CHANNEL_BRIDGE,
	_EventNameName[200:216]:        CHANNEL_UNBRIDGE,
	_EventNameLowerName[200:216]:   CHANNEL_UNBRIDGE,
	_EventNameName[216:232]:        CHANNEL_PROGRESS,
	_EventNameLowerName[216:232]:   CHANNEL_PROGRESS,
	_EventNameName[232:254]:        CHANNEL_PROGRESS_MEDIA,
	_EventNameLowerName[232:254]:   CHANNEL_PROGRESS_MEDIA,
	_EventNameName[254:270]:        CHANNEL_OUTGOING,
	_EventNameLowerName[254:270]:   CHANNEL_OUTGOING,
	_EventNameName[270:282]:        CHANNEL_PARK,
	_EventNameLowerName[270:282]:   CHANNEL_PARK,
	_EventNameName[282:296]:        CHANNEL_UNPARK,
	_EventNameLowerName[282:296]:   CHANNEL_UNPARK,
	_EventNameName[296:315]:        CHANNEL_APPLICATION,
	_EventNameLowerName[296:315]:   CHANNEL_APPLICATION,
	_EventNameName[315:332]:        CHANNEL_ORIGINATE,
	_EventNameLowerName[315:332]:   CHANNEL_ORIGINATE,
	_EventNameName[332:344]:        CHANNEL_UUID,
	_EventNameLowerName[332:344]:   CHANNEL_UUID,
	_EventNameName[344:347]:        API,
	_EventNameLowerName[344:347]:   API,
	_EventNameName[347:350]:        LOG,
	_EventNameLowerName[347:350]:   LOG,
	_EventNameName[350:362]:        INBOUND_CHAN,
	_EventNameLowerName[350:362]:   INBOUND_CHAN,
	_EventNameName[362:375]:        OUTBOUND_CHAN,
	_EventNameLowerName[362:375]:   OUTBOUND_CHAN,
	_EventNameName[375:382]:        STARTUP,
	_EventNameLowerName[375:382]:   STARTUP,
	_EventNameName[382:390]:        SHUTDOWN,
	_EventNameLowerName[382:390]:   SHUTDOWN,
	_EventNameName[390:397]:        PUBLISH,
	_EventNameLowerName[390:397]:   PUBLISH,
	_EventNameName[397:406]:        UNPUBLISH,
	_EventNameLowerName[397:406]:   UNPUBLISH,
	_EventNameName[406:410]:        TALK,
	_EventNameLowerName[406:410]:   TALK,
	_EventNameName[410:416]:        NOTALK,
	_EventNameLowerName[410:416]:   NOTALK,
	_EventNameName[416:429]:        SESSION_CRASH,
	_EventNameLowerName[416:429]:   SESSION_CRASH,
	_EventNameName[429:440]:        MODULE_LOAD,
	_EventNameLowerName[429:440]:   MODULE_LOAD,
	_EventNameName[440:453]:        MODULE_UNLOAD,
	_EventNameLowerName[440:453]:   MODULE_UNLOAD,
	_EventNameName[453:457]:        DTMF,
	_EventNameLowerName[453:457]:   DTMF,
	_EventNameName[457:464]:        MESSAGE,
	_EventNameLowerName[457:464]:   MESSAGE,
	_EventNameName[464:475]:        PRESENCE_IN,
	_EventNameLowerName[464:475]:   PRESENCE_IN,
	_EventNameName[475:484]:        NOTIFY_IN,
	_EventNameLowerName[475:484]:   NOTIFY_IN,
	_EventNameName[484:496]:        PRESENCE_OUT,
	_EventNameLowerName[484:496]:   PRESENCE_OUT,
	_EventNameName[496:510]:        PRESENCE_PROBE,
	_EventNameLowerName[496:510]:   PRESENCE_PROBE,
	_EventNameName[510:525]:        MESSAGE_WAITING,
	_EventNameLowerName[510:525]:   MESSAGE_WAITING,
	_EventNameName[525:538]:        MESSAGE_QUERY,
	_EventNameLowerName[525:538]:   MESSAGE_QUERY,
	_EventNameName[538:544]:        ROSTER,
	_EventNameLowerName[538:544]:   ROSTER,
	_EventNameName[544:549]:        CODEC,
	_EventNameLowerName[544:549]:   CODEC,
	_EventNameName[549:563]:        BACKGROUND_JOB,
	_EventNameLowerName[549:563]:   BACKGROUND_JOB,
	_EventNameName[563:578]:        DETECTED_SPEECH,
	_EventNameLowerName[563:578]:   DETECTED_SPEECH,
	_EventNameName[578:591]:        DETECTED_TONE,
	_EventNameLowerName[578:591]:   DETECTED_TONE,
	_EventNameName[591:606]:        PRIVATE_COMMAND,
	_EventNameLowerName[591:606]:   PRIVATE_COMMAND,
	_EventNameName[606:615]:        HEARTBEAT,
	_EventNameLowerName[606:615]:   HEARTBEAT,
	_EventNameName[615:619]:        TRAP,
	_EventNameLowerName[615:619]:   TRAP,
	_EventNameName[619:631]:        ADD_SCHEDULE,
	_EventNameLowerName[619:631]:   ADD_SCHEDULE,
	_EventNameName[631:643]:        DEL_SCHEDULE,
	_EventNameLowerName[631:643]:   DEL_SCHEDULE,
	_EventNameName[643:655]:        EXE_SCHEDULE,
	_EventNameLowerName[643:655]:   EXE_SCHEDULE,
	_EventNameName[655:666]:        RE_SCHEDULE,
	_EventNameLowerName[655:666]:   RE_SCHEDULE,
	_EventNameName[666:675]:        RELOADXML,
	_EventNameLowerName[666:675]:   RELOADXML,
	_EventNameName[675:681]:        NOTIFY,
	_EventNameLowerName[675:681]:   NOTIFY,
	_EventNameName[681:694]:        PHONE_FEATURE,
	_EventNameLowerName[681:694]:   PHONE_FEATURE,
	_EventNameName[694:717]:        PHONE_FEATURE_SUBSCRIBE,
	_EventNameLowerName[694:717]:   PHONE_FEATURE_SUBSCRIBE,
	_EventNameName[717:729]:        SEND_MESSAGE,
	_EventNameLowerName[717:729]:   SEND_MESSAGE,
	_EventNameName[729:741]:        RECV_MESSAGE,
	_EventNameLowerName[729:741]:   RECV_MESSAGE,
	_EventNameName[741:755]:        REQUEST_PARAMS,
	_EventNameLowerName[741:755]:   REQUEST_PARAMS,
	_EventNameName[755:767]:        CHANNEL_DATA,
	_EventNameLowerName[755:767]:   CHANNEL_DATA,
	_EventNameName[767:774]:        GENERAL,
	_EventNameLowerName[767:774]:   GENERAL,
	_EventNameName[774:781]:        COMMAND,
	_EventNameLowerName[774:781]:   COMMAND,
	_EventNameName[781:798]:        SESSION_HEARTBEAT,
	_EventNameLowerName[781:798]:   SESSION_HEARTBEAT,
	_EventNameName[798:817]:        CLIENT_DISCONNECTED,
	_EventNameLowerName[798:817]:   CLIENT_DISCONNECTED,
	_EventNameName[817:836]:        SERVER_DISCONNECTED,
	_EventNameLowerName[817:836]:   SERVER_DISCONNECTED,
	_EventNameName[836:845]:        SEND_INFO,
	_EventNameLowerName[836:845]:   SEND_INFO,
	_EventNameName[845:854]:        RECV_INFO,
	_EventNameLowerName[845:854]:   RECV_INFO,
	_EventNameName[854:871]:        RECV_RTCP_MESSAGE,
	_EventNameLowerName[854:871]:   RECV_RTCP_MESSAGE,
	_EventNameName[871:882]:        CALL_SECURE,
	_EventNameLowerName[871:882]:   CALL_SECURE,
	_EventNameName[882:885]:        NAT,
	_EventNameLowerName[882:885]:   NAT,
	_EventNameName[885:897]:        RECORD_START,
	_EventNameLowerName[885:897]:   RECORD_START,
	_EventNameName[897:908]:        RECORD_STOP,
	_EventNameLowerName[897:908]:   RECORD_STOP,
	_EventNameName[908:922]:        PLAYBACK_START,
	_EventNameLowerName[908:922]:   PLAYBACK_START,
	_EventNameName[922:935]:        PLAYBACK_STOP,
	_EventNameLowerName[922:935]:   PLAYBACK_STOP,
	_EventNameName[935:946]:        CALL_UPDATE,
	_EventNameLowerName[935:946]:   CALL_UPDATE,
	_EventNameName[946:953]:        FAILURE,
	_EventNameLowerName[946:953]:   FAILURE,
	_EventNameName[953:964]:        SOCKET_DATA,
	_EventNameLowerName[953:964]:   SOCKET_DATA,
	_EventNameName[964:979]:        MEDIA_BUG_START,
	_EventNameLowerName[964:979]:   MEDIA_BUG_START,
	_EventNameName[979:993]:        MEDIA_BUG_STOP,
	_EventNameLowerName[979:993]:   MEDIA_BUG_STOP,
	_EventNameName[993:1014]:       CONFERENCE_DATA_QUERY,
	_EventNameLowerName[993:1014]:  CONFERENCE_DATA_QUERY,
	_EventNameName[1014:1029]:      CONFERENCE_DATA,
	_EventNameLowerName[1014:1029]: CONFERENCE_DATA,
	_EventNameName[1029:1043]:      CALL_SETUP_REQ,
	_EventNameLowerName[1029:1043]: CALL_SETUP_REQ,
	_EventNameName[1043:1060]:      CALL_SETUP_RESULT,
	_EventNameLowerName[1043:1060]: CALL_SETUP_RESULT,
	_EventNameName[1060:1071]:      CALL_DETAIL,
	_EventNameLowerName[1060:1071]: CALL_DETAIL,
	_EventNameName[1071:1083]:      DEVICE_STATE,
	_EventNameLowerName[1071:1083]: DEVICE_STATE,
	_EventNameName[1083:1086]:      ALL,
	_EventNameLowerName[1083:1086]: ALL,
}

var _EventNameNames = []string{
	_EventNameName[0:6],
	_EventNameName[6:11],
	_EventNameName[11:25],
	_EventNameName[25:40],
	_EventNameName[40:53],
	_EventNameName[53:70],
	_EventNameName[70:84],
	_EventNameName[84:98],
	_EventNameName[98:121],
	_EventNameName[121:136],
	_EventNameName[136:160],
	_EventNameName[160:172],
	_EventNameName[172:186],
	_EventNameName[186:200],
	_EventNameName[200:216],
	_EventNameName[216:232],
	_EventNameName[232:254],
	_EventNameName[254:270],
	_EventNameName[270:282],
	_EventNameName[282:296],
	_EventNameName[296:315],
	_EventNameName[315:332],
	_EventNameName[332:344],
	_EventNameName[344:347],
	_EventNameName[347:350],
	_EventNameName[350:362],
	_EventNameName[362:375],
	_EventNameName[375:382],
	_EventNameName[382:390],
	_EventNameName[390:397],
	_EventNameName[397:406],
	_EventNameName[406:410],
	_EventNameName[410:416],
	_EventNameName[416:429],
	_EventNameName[429:440],
	_EventNameName[440:453],
	_EventNameName[453:457],
	_EventNameName[457:464],
	_EventNameName[464:475],
	_EventNameName[475:484],
	_EventNameName[484:496],
	_EventNameName[496:510],
	_EventNameName[510:525],
	_EventNameName[525:538],
	_EventNameName[538:544],
	_EventNameName[544:549],
	_EventNameName[549:563],
	_EventNameName[563:578],
	_EventNameName[578:591],
	_EventNameName[591:606],
	_EventNameName[606:615],
	_EventNameName[615:619],
	_EventNameName[619:631],
	_EventNameName[631:643],
	_EventNameName[643:655],
	_EventNameName[655:666],
	_EventNameName[666:675],
	_EventNameName[675:681],
	_EventNameName[681:694],
	_EventNameName[694:717],
	_EventNameName[717:729],
	_EventNameName[729:741],
	_EventNameName[741:755],
	_EventNameName[755:767],
	_EventNameName[767:774],
	_EventNameName[774:781],
	_EventNameName[781:798],
	_EventNameName[798:817],
	_EventNameName[817:836],
	_EventNameName[836:845],
	_EventNameName[845:854],
	_EventNameName[854:871],
	_EventNameName[871:882],
	_EventNameName[882:885],
	_EventNameName[885:897],
	_EventNameName[897:908],
	_EventNameName[908:922],
	_EventNameName[922:935],
	_EventNameName[935:946],
	_EventNameName[946:953],
	_EventNameName[953:964],
	_EventNameName[964:979],
	_EventNameName[979:993],
	_EventNameName[993:1014],
	_EventNameName[1014:1029],
	_EventNameName[1029:1043],
	_EventNameName[1043:1060],
	_EventNameName[1060:1071],
	_EventNameName[1071:1083],
	_EventNameName[1083:1086],
}

// EventNameString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func EventNameString(s string) (EventName, error) {
	if val, ok := _EventNameNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _EventNameNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to EventName values", s)
}

// EventNameValues returns all values of the enum
func EventNameValues() []EventName {
	return _EventNameValues
}

// EventNameStrings returns a slice of all String values of the enum
func EventNameStrings() []string {
	strs := make([]string, len(_EventNameNames))
	copy(strs, _EventNameNames)
	return strs
}

// IsAEventName returns "true" if the value is listed in the enum definition. "false" otherwise
func (i EventName) IsAEventName() bool {
	for _, v := range _EventNameValues {
		if i == v {
			return true
		}
	}
	return false
}
